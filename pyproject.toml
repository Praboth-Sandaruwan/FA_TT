[tool.poetry]
name = "bootstrap-tooling"
version = "0.1.0"
description = "Bootstrap Python project with shared tooling."
authors = ["cto.new <dev@cto.new>"]
readme = "README.md"
packages = [{ include = "projects", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
alembic = "1.17.0"
asyncpg = "0.30.0"
fastapi = "0.120.0"
httpx = "0.27.2"
beanie = "1.30.0"
motor = "3.7.1"
pydantic-settings = {extras = ["dotenv"], version = "2.11.0"}
redis = "5.3.1"
rq = "1.16.2"
sqlalchemy = "2.0.44"
sqlmodel = "0.0.22"
uvicorn = {extras = ["standard"], version = "0.38.0"}
passlib = {extras = ["bcrypt"], version = "1.7.4"}
python-jose = {extras = ["cryptography"], version = "3.5.0"}
aio-pika = "9.5.7"
opentelemetry-api = "1.27.0"
opentelemetry-sdk = "1.27.0"
opentelemetry-exporter-otlp-proto-http = "1.27.0"
opentelemetry-exporter-prometheus = "0.48b0"
prometheus-client = "0.20.0"
slowapi = "0.1.9"

[tool.poetry.group.dev]
optional = false

[tool.poetry.group.dev.dependencies]
aiosqlite = "0.20.0"
black = "24.10.0"
coverage = "7.11.0"
fakeredis = "2.32.0"
mongomock-motor = "0.0.21"
mypy = "1.18.2"
pre-commit = "3.8.0"
pytest = "8.4.2"
pytest-asyncio = "0.24.0"
ruff = "0.7.4"
bandit = "1.7.10"

[tool.poetry.scripts]
beginner-app = "projects.01-beginner.app.main:run"
intermediate-app = "projects.02-intermediate.app.main:run"
intermediate-worker = "projects.02-intermediate.app.worker:run"
advanced-app = "projects.03-advanced.app.main:run"
advanced-worker = "projects.03-advanced.app.worker:run"

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
source = [
    "src/projects/01-beginner/app",
    "src/projects/02-intermediate/app",
    "src/projects/03-advanced/app",
]

[tool.coverage.report]
show_missing = true
fail_under = 85
exclude_lines = ["pragma: no cover"]

[tool.black]
line-length = 88
target-version = ["py312"]
include = "src/.+\\.pyi?$"
